<?xml version="1.0" encoding="UTF-8"?>
<project>
    <parent>
        <groupId>org.archetypeUma</groupId>
        <artifactId>archetypeUma</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.archetypeUma</groupId>
    <artifactId>archetypeUma-model</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>archetypeUma - model</name>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- (1) test-compile: sql-maven-plugin: DROP DATABASE  -->
            <!-- (4) process-test-classes: (create-view) Debido a que JPA solo permite
                        mapear pojos con tablas es necesario crear las vistas a partir
                        de un scripts con el mismo nombre que el atributo @table de
                        los pojos y borrar la tabla que hbm2ddl crea.
                        De esta manera se consigue un mapeo Pojo-Vista  -->
            <!-- <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>${sql.maven.version}</version>
                <executions>
                    <execution>
                        <id>drop-database</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>target/test-classes/drop-database-${profile.database}.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-view</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>target/test-classes/create-view-${profile.database}.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>recreate-auditoria-tables</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>${profile.path.script.auditoria}/${hbm2ddl.outputfile.auditoria}</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>recreate-osworkflow-tables</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>${profile.path.script.osworkflow}/${hbm2ddl.outputfile.osworkflow}</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>data-changes-for-orbe</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>target/test-classes/data-changes-with-orbe-${orbe.activo}.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                   <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                    <dependency>
                      <groupId>net.sourceforge.cobertura</groupId>
                      <artifactId>cobertura</artifactId>
                      <version>${cobertura.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${jdbc.driverClassName}</driver>
                    <username>${jdbc.username}</username>
                    <password>${jdbc.password}</password>
                    <url>${jdbc.url}</url>
                    <autocommit>true</autocommit>
                    <skip>${maven.test.skip}</skip>
                </configuration>
            </plugin>-->

            <!-- (2) test-compile: hibernate3-maven-plugin: hbm2ddl  -->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>hibernate3-maven-plugin-->
<!--				</artifactId>-->
<!--                <version>${hibernate3.maven.version}</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>test-compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>hbm2ddl</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>${jdbc.groupId}</groupId>-->
<!--                        <artifactId>${jdbc.artifactId}</artifactId>-->
<!--                        <version>${jdbc.version}</version>-->
<!--                    </dependency>-->
<!--                    <dependency>-->
<!--                        <groupId>net.sourceforge.cobertura</groupId>-->
<!--                        <artifactId>cobertura</artifactId>-->
<!--                        <version>${cobertura.version}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--                <configuration>-->
<!--                    <components>-->
<!--                        <component>-->
<!--                            <name>hbm2ddl</name>-->
<!--                            <implementation> annotationconfiguration</implementation>-->
<!--                        </component>-->
<!--                    </components>-->
<!--                    <componentProperties>-->
<!--                        <drop>${hbm2ddl.drop.model}</drop>-->
<!--                        <jdk5>true</jdk5>-->
<!--                        <propertyfile>target/test-classes/jdbc.properties</propertyfile>-->
<!--                        <skip>${maven.test.skip}</skip>-->
<!--                        <outputfilename>${hbm2ddl.outputfile.model}</outputfilename>-->
<!--                    </componentProperties>-->
<!--                </configuration>-->
<!--            </plugin>-->

            <!-- (3) process-test-classes: dbunit-maven-plugin: CLEAN_INSERT -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dbunit-maven-plugin</artifactId>
                <version>${dbunit.maven.version}</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>operation</goal>
                        </goals>
                        <configuration>
		                    <dataTypeFactoryName> ${dbunit.dataTypeFactoryName}
							</dataTypeFactoryName>
		                    <src>src/main/resources/sample-data.xml
							</src>
		                    <type>${dbunit.operation.type}</type>
		                </configuration>
                    </execution>
                    <!-- execution>
                        <id>exporting</id>
			            <phase>test</phase>
			            <goals>
			              <goal>export</goal>
			            </goals>
			            <configuration>
			                <format>sql</format>
			                <dest>target/sample-data.sql</dest>
			            </configuration>
			          </execution -->
                </executions>
                <configuration>
	                <driver>${jdbc.driverClassName}</driver>
                    <username>${jdbc.username}</username>
                    <password>${jdbc.password}</password>
                    <url>${jdbc.url}</url>
                    <schema>${dbunit.schema}</schema>
                    <skip>${maven.test.skip}</skip>
                    <skipOracleRecycleBinTables>true</skipOracleRecycleBinTables>
					<useQualifiedTableNames>false</useQualifiedTableNames>
	            </configuration>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- DEPLOY PLUGIN -->
            <plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-deploy-plugin</artifactId>
        		<version>${deploy.maven.version}</version>
        		<configuration>
        			<skip>${model.skip.deploy}</skip>
        		</configuration>
      		</plugin>
        </plugins>
    </build>
</project>
